basePath: /api/v1
definitions:
  common.Response:
    properties:
      code:
        $ref: '#/definitions/e.Code'
      data: {}
      msg:
        type: string
    type: object
  e.Code:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    type: integer
    x-enum-comments:
      ErrorAccountInvalid: 用户名或密码错误
      ErrorAddAddress: 添加用户地址失败
      ErrorAddCartItem: 添加购物项失败
      ErrorAddFavorite: 收藏商品失败
      ErrorCacheCartItems: 缓存购物项失败
      ErrorClearCart: 清空购物车失败
      ErrorContextValue: 上下文值传递错误
      ErrorCreateUser: 创建用户错误
      ErrorDeleteAddress: 删除用户地址失败
      ErrorDeleteCartCache: 删除购物车缓存失败
      ErrorDeleteCartItem: 删除购物项失败
      ErrorDeleteFavorite: 取消收藏失败
      ErrorEmailLinkExpire: 邮件确认链接已过期
      ErrorEncryptMoney: 金额加密错误
      ErrorEncryptPassword: 密码加密错误
      ErrorFileError: 文件错误
      ErrorFileType: 文件类型错误
      ErrorFollowUser: 关注用户失败
      ErrorGenerateToken: token生成错误
      ErrorGetAddressInfo: 获取地址信息失败
      ErrorGetAddressList: 获取用户地址列表失败
      ErrorGetCart: 获取购物车失败
      ErrorGetCategoryList: 获取商品分类失败
      ErrorGetFavoriteList: 获取收藏列表失败
      ErrorGetFollowerList: 获取粉丝列表失败
      ErrorGetFollowingList: 获取关注列表失败
      ErrorGetProductByID: 根据ID获取商品失败
      ErrorGetProductList: 获取商品列表失败
      ErrorGetUserByID: 根据id获取用户失败
      ErrorIncorrectPassword: 密码错误
      ErrorInvalidIDParam: 非法的id参数
      ErrorOSSUploadError: OSS文件上传错误
      ErrorParseToken: token解析错误
      ErrorSearchProduct: 搜索商品失败
      ErrorSendEmail: 发送邮件错误
      ErrorSendEmailTooFrequent: 邮件发送操作频繁
      ErrorUnfollowUser: 取消关注失败
      ErrorUpdateAddress: 更新用户地址失败
      ErrorUpdateCartItemQuantity: 更新购物项数量失败
      ErrorUpdateEmail: 更新邮箱错误
      ErrorUpdateUser: 更新用户失败
      ErrorUploadAvatar: 头像上传错误
      ErrorUploadFile: 文件上传错误
      ErrorUserExists: 用户已存在
      InvalidParams: 参数错误
      Success: 响应成功
      UnknownError: 未知错误
    x-enum-varnames:
    - Success
    - InvalidParams
    - UnknownError
    - ErrorUserExists
    - ErrorEncryptPassword
    - ErrorEncryptMoney
    - ErrorCreateUser
    - ErrorAccountInvalid
    - ErrorGetUserByID
    - ErrorUpdateUser
    - ErrorIncorrectPassword
    - ErrorUploadAvatar
    - ErrorFollowUser
    - ErrorUnfollowUser
    - ErrorGetFollowingList
    - ErrorGetFollowerList
    - ErrorGenerateToken
    - ErrorParseToken
    - ErrorContextValue
    - ErrorUploadFile
    - ErrorFileError
    - ErrorOSSUploadError
    - ErrorFileType
    - ErrorSendEmail
    - ErrorUpdateEmail
    - ErrorEmailLinkExpire
    - ErrorSendEmailTooFrequent
    - ErrorGetCategoryList
    - ErrorGetProductList
    - ErrorGetProductByID
    - ErrorInvalidIDParam
    - ErrorSearchProduct
    - ErrorGetFavoriteList
    - ErrorAddFavorite
    - ErrorDeleteFavorite
    - ErrorGetCart
    - ErrorAddCartItem
    - ErrorDeleteCartItem
    - ErrorClearCart
    - ErrorUpdateCartItemQuantity
    - ErrorCacheCartItems
    - ErrorDeleteCartCache
    - ErrorGetAddressList
    - ErrorGetAddressInfo
    - ErrorAddAddress
    - ErrorUpdateAddress
    - ErrorDeleteAddress
  response.AddAddressResp:
    properties:
      address_id:
        type: integer
    type: object
  response.AddCartItemResp:
    properties:
      cart_item_id:
        type: integer
    type: object
  response.AddFavoriteResp:
    type: object
  response.Address:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  response.AuthLoginResp:
    properties:
      access_token:
        type: string
      avatar:
        type: string
      nickname:
        type: string
      refresh_token:
        type: string
    type: object
  response.AuthRegisterResp:
    type: object
  response.BindEmailResp:
    type: object
  response.CartItem:
    properties:
      id:
        type: integer
      image_url:
        type: string
      price:
        type: number
      product_id:
        type: integer
      quantity:
        type: integer
      title:
        type: string
    type: object
  response.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  response.ClearCartResp:
    type: object
  response.DeleteAddressResp:
    type: object
  response.DeleteCartItemResp:
    type: object
  response.DeleteFavoriteResp:
    type: object
  response.Favorite:
    properties:
      id:
        description: 商品id
        type: integer
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  response.Follow:
    properties:
      avatar:
        type: string
      nickname:
        type: string
    type: object
  response.GetAddressInfoResp:
    properties:
      address:
        $ref: '#/definitions/response.Address'
    type: object
  response.GetAddressListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/response.Address'
        type: array
    type: object
  response.GetCartListResp:
    properties:
      items:
        items:
          $ref: '#/definitions/response.CartItem'
        type: array
    type: object
  response.GetCategoryListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/response.Category'
        type: array
      total:
        type: integer
    type: object
  response.GetFavoriteListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/response.Favorite'
        type: array
    type: object
  response.GetProductListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/response.Product'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  response.Product:
    properties:
      id:
        description: 商品ID
        type: integer
      image_url:
        description: 商品主图的URL
        type: string
      price:
        description: 商品价格
        type: number
      stock:
        description: 库存数量
        type: integer
      title:
        description: 商品名称
        type: string
    type: object
  response.SearchProductResp:
    properties:
      list:
        items:
          $ref: '#/definitions/response.Product'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  response.ShowUserInfoResp:
    properties:
      avatar:
        type: string
      email:
        type: string
      nickname:
        type: string
      status:
        type: string
      username:
        type: string
    type: object
  response.UpdateAddressResp:
    type: object
  response.UpdateCartItemQuantityResp:
    type: object
  response.UploadAvatarResp:
    type: object
  response.UserFollowResp:
    type: object
  response.UserFollowerListResp:
    properties:
      follower:
        items:
          $ref: '#/definitions/response.Follow'
        type: array
    type: object
  response.UserFollowingListResp:
    properties:
      following:
        items:
          $ref: '#/definitions/response.Follow'
        type: array
    type: object
  response.UserInfoUpdateResp:
    type: object
  response.UserPasswordChangeResp:
    type: object
  response.UserUnfollowResp:
    type: object
  response.ValidEmailResp:
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: 1478488313@qq.com
    name: API Support
    url: https://github.com/hespecial
  description: gin-mall API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: gin-mall
  version: "1.0"
paths:
  /address:
    get:
      description: 获取用户的所有地址信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetAddressListResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取用户地址列表
      tags:
      - Address
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建一个新的用户地址，地址信息包括姓名、电话、地址
      parameters:
      - description: 姓名
        in: formData
        name: name
        required: true
        type: string
      - description: 电话
        in: formData
        name: phone
        required: true
        type: string
      - description: 地址
        in: formData
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AddAddressResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 添加用户地址
      tags:
      - Address
  /address/{id}:
    delete:
      description: 通过地址id删除指定的地址
      parameters:
      - description: 地址id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.DeleteAddressResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 删除用户地址
      tags:
      - Address
    get:
      description: 通过地址id获取地址信息
      parameters:
      - description: 地址id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetAddressInfoResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取地址信息
      tags:
      - Address
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过指定地址id更新用户地址，可更新信息包括姓名、电话、地址
      parameters:
      - description: 地址id
        in: path
        name: id
        required: true
        type: integer
      - description: 姓名
        in: formData
        name: name
        required: true
        type: string
      - description: 电话
        in: formData
        name: phone
        required: true
        type: string
      - description: 地址
        in: formData
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateAddressResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 更新用户地址
      tags:
      - Address
  /auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 输入`用户名-密码`以登录
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AuthLoginResp'
              type: object
      summary: 用户登录
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 输入`用户名-密码-确认密码`以注册
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      - description: 确认密码
        in: formData
        name: confirm_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AuthRegisterResp'
              type: object
      summary: 用户注册
      tags:
      - Auth
  /cart:
    delete:
      description: 清空用户的购物车
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ClearCartResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 清空购物车
      tags:
      - Cart
    get:
      description: 获取用户所有加入购物车的商品
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetCartListResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取购物车列表
      tags:
      - Cart
  /cart/item:
    post:
      consumes:
      - application/json
      description: 将指定的商品和数量添加至购物车
      parameters:
      - description: 商品id（product_id）、数量(quantity)
        in: body
        name: cart_item
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AddCartItemResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 添加购物项
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: 更改购物车中指定的商品数量
      parameters:
      - description: 购物项id（id）、数量（quantity）
        in: body
        name: cart_item
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateCartItemQuantityResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 更新购物项数量
      tags:
      - Cart
  /cart/item/{id}:
    delete:
      description: 通过购物项id删除购物车中的商品
      parameters:
      - description: 购物项id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.DeleteCartItemResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 删除购物项
      tags:
      - Cart
  /category:
    get:
      consumes:
      - application/json
      description: 获取所有的商品分类
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetCategoryListResp'
              type: object
      summary: 获取商品分类列表
      tags:
      - Category
  /favorite:
    delete:
      consumes:
      - application/json
      description: 通过商品id取消收藏
      parameters:
      - description: 商品id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.DeleteFavoriteResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 收藏商品
      tags:
      - Favorite
    get:
      consumes:
      - application/json
      description: 登陆用户后可查看已收藏的商品
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetFavoriteListResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取收藏列表
      tags:
      - Favorite
    post:
      consumes:
      - application/json
      description: 通过商品id收藏商品
      parameters:
      - description: 商品id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AddFavoriteResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 取消收藏
      tags:
      - Favorite
  /product/{id}:
    get:
      description: 通过商品ID获取商品详情信息
      parameters:
      - description: 商品id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetProductListResp'
              type: object
      summary: 获取商品详情
      tags:
      - Product
  /product/search:
    get:
      description: 通过关键词并指定页号和大小来获取查询的商品
      parameters:
      - description: 关键词
        in: query
        name: keyword
        required: true
        type: string
      - description: 页号
        in: query
        name: page
        required: true
        type: integer
      - description: 大小
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SearchProductResp'
              type: object
      summary: 搜索商品
      tags:
      - Product
  /products:
    get:
      description: 通过页号和大小获取指定的商品列表
      parameters:
      - description: 页号
        in: query
        name: page
        required: true
        type: integer
      - description: 大小
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetProductListResp'
              type: object
      summary: 获取商品列表
      tags:
      - Product
  /user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 上传头像，文件类型支持jpg(jpeg)、png
      parameters:
      - description: 头像
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UploadAvatarResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 上传用户头像
      tags:
      - User
  /user/email/bind:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 发送邮件到用户指定邮箱，用户确认后进行绑定
      parameters:
      - description: 邮箱
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.BindEmailResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 绑定邮箱
      tags:
      - User
  /user/email/valid:
    get:
      description: 通过指定链接确认绑定操作
      parameters:
      - description: email token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ValidEmailResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 邮箱绑定确认
      tags:
      - User
  /user/follow:
    delete:
      consumes:
      - application/json
      description: 基于id取关用户
      parameters:
      - description: 取关用户的id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserUnfollowResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 取关用户
      tags:
      - User
    post:
      consumes:
      - application/json
      description: 基于id关注的其他用户
      parameters:
      - description: 关注用户的id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserFollowResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 关注用户
      tags:
      - User
  /user/follower:
    get:
      consumes:
      - application/json
      description: 获取用户的粉丝列表，列表中的用户信息包括头像和昵称
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserFollowerListResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取粉丝列表
      tags:
      - User
  /user/following:
    get:
      consumes:
      - application/json
      description: 获取用户的关注列表，列表中的用户信息包括头像和昵称
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserFollowingListResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 获取关注列表
      tags:
      - User
  /user/info:
    get:
      consumes:
      - application/json
      description: 可查看信息包括：用户名、昵称、用户状态、邮箱、头像
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ShowUserInfoResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 查看用户信息
      tags:
      - User
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 可修改用户昵称
      parameters:
      - description: 昵称
        in: formData
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserInfoUpdateResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 修改用户信息
      tags:
      - User
  /user/password:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 输入`原密码-新密码-确认密码`以更改密码
      parameters:
      - description: 原密码
        in: formData
        name: origin_password
        required: true
        type: string
      - description: 新密码
        in: formData
        name: new_password
        required: true
        type: string
      - description: 确认密码
        in: formData
        name: confirm_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserPasswordChangeResp'
              type: object
      security:
      - AccessToken: []
      - RefreshToken: []
      summary: 更改用户密码
      tags:
      - User
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
  RefreshToken:
    in: header
    name: X-Refresh-Token
    type: apiKey
swagger: "2.0"
